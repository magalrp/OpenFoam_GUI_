# OpenFOAM GUI Setup Interface

Este proyecto ofrece una interfaz gráfica en Python/PyQt5 para configurar, inicializar y lanzar casos de OpenFOAM de forma guiada.

## Estado Actual

1. **Secciones de la GUI**  
   - **Caso**  
     - Directorio de trabajo  
     - Modelos (gravedad, energía, turbulencia, radiación, química)  
     - Materiales (+ propiedades termofísicas)  
     - Condiciones de contorno  
     - Fase discreta  
   - **Solucionador**  
     - Métodos  
     - Controles  
     - Ejecutar cálculo  
       - Unifica antes “Inicialización” + “Run calculation”  
       - Genera **todos** los archivos en `temp/DP0`  
       - Opciones de cálculo paralelo con `decomposeParDict`

2. **Generación de Archivos OpenFOAM**  
   - **En `temp/DP0/0/`**:  
     U, T, p, p_rgh, k, epsilon, omega, nut, alphat, Ydefault (si química activa)  
   - **En `temp/DP0/constant/`**:  
     - `turbulenceProperties`  
     - `radiationProperties`  
     - `g`  
     - `chemistryProperties` (si especies activas)  
     - `combustionProperties` (si combustión activa)  
     - `particleTrackProperties` (si fase discreta activa)

3. **Persistencia JSON**  
   - Cada sección guarda/valida automáticamente su JSON en `temp/*.json`  
   - `core/json_manager.py` usa esquemas (`/schema/*.schema.json`)  

## Estructura de Archivos (fiel al repositorio)

OpenFoam_GUI_/  
├── main.py  
├── config.json  
├── requirements.txt  
├── README.md  
├── ui/  
│   ├── main_window.py  
│   ├── tree_builder.py  
│   ├── dialogs/  
│   │   ├── chemical_options_dialog.py  
│   │   ├── combustion_options_dialog.py  
│   │   ├── create_material_dialog.py  
│   │   ├── injection_dialog.py  
│   │   ├── inlet_bc_dialog.py  
│   │   ├── inlet_outlet_bc_dialog.py  
│   │   ├── load_materials_dialog.py  
│   │   ├── new_material_dialog.py  
│   │   ├── radiation_options_dialog.py  
│   │   ├── reactions_dialog.py  
│   │   ├── species_dialog.py  
│   │   ├── wall_bc_dialog.py  
│   │   └── injection_dialogs/  
│   │       ├── cone_nozzle_injection_dialog.py  
│   │       ├── patch_injection_dialog.py  
│   │       ├── type_selection_dialog.py  
│   │       └── dialog_opt_disperse_fase.py  
│   ├── sections/  
│   │   ├── directorio_trabajo.py  
│   │   ├── modelo.py  
│   │   ├── materiales.py  
│   │   ├── boundary_conditions.py  
│   │   ├── fase_discreta.py  
│   │   ├── methods.py  
│   │   ├── controls.py  
│   │   └── run_calculation.py  
│   └── conf/  
│       ├── conf_constant.py  
│       ├── conf_bc.py  
│       ├── bc/  
│       │   ├── conf_U.py  
│       │   ├── conf_T.py  
│       │   ├── conf_P.py  
│       │   ├── conf_p_rgh.py  
│       │   ├── conf_k.py  
│       │   ├── conf_alphat.py  
│       │   ├── conf_epsilon.py  
│       │   ├── conf_omega.py  
│       │   ├── conf_nut.py  
│       │   ├── conf_especies.py  
│       │   └── conf_Ydefault.py  
│       └── constant/  
│           ├── conf_turbulenceProperties.py  
│           ├── conf_radiation.py  
│           ├── conf_g.py  
│           ├── conf_chem.py  
│           ├── conf_combustion.py  
│           └── conf_particleTrack.py  
├── core/  
│   ├── json_manager.py  
│   ├── boundary_parser.py  
│   ├── config.py  
│   ├── materials_library.py  
│   └── species_library.py  
└── temp/  
    ├── case_config.json  
    ├── materials.json  
    ├── boundary_conditions.json  
    ├── fvSchemes.json  
    ├── fvSolution.json  
    ├── controlDict.json  
    ├── Disperse_fase.json  
    └── DP0/  
        ├── 0/  
        └── constant/  

## Próximos Pasos

1. **`transportProperties`**  
   - Monofásico vs. multifásico  
2. **Cálculo paralelo**  
   - `decomposeParDict`: simple, hierarchical, scotch…  
   - Botón “Decompose & Run in parallel”  
3. **Visualización embebida**  
   - Integrar ParaView Qt interactor  
4. **Temas y UX**  
   - Oscuro/Claro, iconos, divisiones más claras  
5. **Internacionalización**  
   - Multi-idioma (ES/EN)  
6. **CI/CD & Tests**  
   - GitHub Actions, tests de generación JSON y conf_*  
7. **Empaquetado**  
   - AppImage, MSI, PyPI  

---

**Licencia MIT** – ¡Contribuciones bienvenidas!
"""
